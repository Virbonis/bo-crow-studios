import { baseClass, getShortPause, getTraderClassMOTest } from 'helper'
import getClassTdMO from 'helper/mo'

describe('mo', () => {
  describe('baseClass', () => {
    describe('source is not NULL', () => {
      test(`last_change_handicap, 
        last_change_handicap, 
        last_change_odds, 
        alert_trader_odds, 
        last_change_ha, 
        alert_trader_ha, 
        last_change_ldiff, 
        alert_trader_ldiff are 1`, () => {
        const record = {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 1,
          alert_trader_handicap: 1,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 1,
          alert_trader_odds: 1,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 1,
          alert_trader_ha: 1,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 1,
          alert_trader_ldiff: 1,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        }
        expect(baseClass(record)).toEqual({
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
          ha: 'bg-yellow bg-pink',
          handicap: 'alert_trader_boss bg-pink',
          ldiff: 'alert_trader_boss bg-pink',
          odds: 'alert_trader_boss bg-pink',
        })
      })
      test(`last_change_handicap, 
      last_change_handicap, 
      last_change_odds, 
      alert_trader_odds, 
      last_change_ha, 
      alert_trader_ha, 
      last_change_ldiff, 
      alert_trader_ldiff are not 1`, () => {
        const record = {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        }
        expect(baseClass(record)).toEqual({
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
        })
      })
      test(`st4pointldiff is not Y AND stopen is not N`, () => {
        const record = {
          st_4point_diff: 'N',
          st_open: 'Y',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        }
        expect(baseClass(record)).toEqual({
          st4pointldiff: '',
          stopen: '',
          ha: ' ',
          handicap: ' ',
          ldiff: ' ',
          odds: ' ',
        })
      })
    })
    test('source is NULL', () => expect(baseClass(null)).toEqual({}))
  })
  describe('getTraderClassMOTest', () => {
    test('lastChg is ha', () =>
      expect(getTraderClassMOTest('TraderGroupIsBoss', 'ha')).toBe('bg-yellow'))
    test('traderGroup is TraderGroupIsBoss', () =>
      expect(getTraderClassMOTest('TraderGroupIsBoss', '')).toBe('alert_trader_boss'))
    test('traderGroup is TraderGroupIsSeniorSupervisor', () =>
      expect(getTraderClassMOTest('TraderGroupIsSeniorSupervisor', '')).toBe('alert_trader_spv'))
    test('traderGroup is TraderGroupIsTrader', () =>
      expect(getTraderClassMOTest('TraderGroupIsTrader', '')).toBe('alert_trader'))
    test('traderGroup is TraderGroupIsLeeching', () =>
      expect(getTraderClassMOTest('TraderGroupIsLeeching', '')).toBe('alert_trader_leeching'))
    test('traderGroup is not found', () => expect(getTraderClassMOTest('', '')).toBe(''))
  })
  describe('getShortPause', () => {
    test('Return Result', () => expect(getShortPause('maxbet')).toBe('maxbet'))
  })
  describe('getClassTdMO', () => {
    test(`early_settlement_alert = 1, 
    st_auto_odds = 1, 
    st_open = N, 
    stock != 1, 
    alert_stock = 1`, () => {
      const record = {
        ArrMatch: { early_settlement_alert: 1 },
        ArrHDP: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 1,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOU: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 1,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOE: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 1,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        Arr1X2: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 1,
          stock: 1,
          alert_stock: 1,
        },
        ArrML: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrGAH: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
      }
      expect(getClassTdMO(record)).toEqual({
        earlysettlement: 'bg-lawngreen',
        scoreBox: 'bg-lime',
        hdp: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ou: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        oe: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ml: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        gah: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        '1x2': {
          stopen: 'bg-red',
          stock: 'bg-light-yellow',
        },
      })
    })
    test(`early_settlement_alert = 0, 
    st_auto_odds = 0, 
    st_open = Y, 
    stock != 0, 
    alert_stock = 0`, () => {
      const record = {
        ArrMatch: { early_settlement_alert: 0 },
        ArrHDP: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 0,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOU: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 0,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOE: {
          st_4point_diff: 'Y',
          st_open: 'N',
          st_auto_odds: 0,
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        Arr1X2: {
          st_4point_diff: 'Y',
          st_open: 'Y',
          st_auto_odds: 0,
          stock: 0,
          alert_stock: 0,
        },
        ArrML: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrGAH: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
      }
      expect(getClassTdMO(record)).toEqual({
        earlysettlement: '',
        scoreBox: 'bg-orange',
        hdp: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ou: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        oe: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ml: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        gah: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        '1x2': {
          stopen: '',
          stock: '',
        },
      })
    })
    test('Arr1x2 and st_auto_odds are empty', () => {
      const record = {
        ArrMatch: { early_settlement_alert: 0 },
        ArrHDP: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOU: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrOE: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrML: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
        ArrGAH: {
          st_4point_diff: 'Y',
          st_open: 'N',
          last_change_handicap: 0,
          alert_trader_handicap: 0,
          trader_group_hdc_display: 'TraderGroupIsBoss',
          last_change_odds: 0,
          alert_trader_odds: 0,
          trader_group_odds: 'TraderGroupIsBoss',
          last_change_ha: 0,
          alert_trader_ha: 0,
          trader_group_ha: 'TraderGroupIsBoss',
          last_change_ldiff: 0,
          alert_trader_ldiff: 0,
          trader_group_odds_step_mapping: 'TraderGroupIsBoss',
        },
      }
      expect(getClassTdMO(record)).toEqual({
        earlysettlement: '',
        scoreBox: 'bg-lime',
        hdp: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ou: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        oe: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        ml: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        gah: {
          ha: ' bg-pink',
          handicap: ' bg-pink',
          ldiff: ' bg-pink',
          odds: ' bg-pink',
          st4pointldiff: 'bg-pink',
          stopen: 'bg-red',
        },
        '1x2': {},
      })
    })
  })
})
